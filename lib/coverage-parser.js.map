{"version":3,"file":"coverage-parser.js","sources":["../src/coverage-parser.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nconst _ = require(\"lodash\");\nconst $ = require(\"lodash/fp\");\n\nconst calculatePercentage = (covered, total) => {\n\tconst percentage = _.round(covered / total / 0.01, 2);\n\n\treturn _.isNaN(percentage) ? 0 : percentage;\n};\n\nconst getCoverage = (type, coverage) => {\n\tconst results = _.chain(coverage)\n\t\t.values()\n\t\t.map($.property(type))\n\t\t.map(_.values)\n\t\t.flattenDeep()\n\t\t.reduce(\n\t\t\t(result, coverageType) => ({\n\t\t\t\ttotal: ++result.total,\n\t\t\t\tcovered: coverageType ? ++result.covered : result.covered,\n\t\t\t}),\n\t\t\t{ total: 0, covered: 0 },\n\t\t) // eslint-disable-line no-param-reassign\n\t\t.value();\n\n\treturn calculatePercentage(results.covered, results.total);\n};\n\nconst getBranchCoverage = coverage => getCoverage(\"b\", coverage);\nconst getFunctionCoverage = coverage => getCoverage(\"f\", coverage);\nconst getStatementCoverage = coverage => getCoverage(\"s\", coverage);\n\nmodule.exports = {\n\tgetBranchCoverage,\n\tgetFunctionCoverage,\n\tgetStatementCoverage,\n};\n"],"names":["const","_","require","$","getCoverage","type","coverage","percentage","results","chain","values","map","property","flattenDeep","reduce","result","coverageType","total","covered","value","round","isNaN","module","exports"],"mappings":"AAEAA,IAAMC,EAAIC,QAAQ,UACZC,EAAID,QAAQ,aAQZE,WAAeC,EAAMC,GAC1BN,IANMO,EAMAC,EAAUP,EAAEQ,MAAMH,GACtBI,SACAC,IAAIR,EAAES,SAASP,IACfM,IAAIV,EAAES,QACNG,cACAC,gBACCC,EAAQC,UACRC,QAASF,EAAOE,MAChBC,QAASF,IAAiBD,EAAOG,QAAUH,EAAOG,WAEjDD,MAAO,EAAGC,QAAS,IAErBC,QAEF,OApBMZ,EAAaN,EAAEmB,MAoBMZ,EAAQU,QAASV,EAAQS,MApBP,IAAM,GAE5ChB,EAAEoB,MAAMd,GAAc,EAAIA,GAyBlCe,OAAOC,oCAJmBjB,UAAYF,EAAY,IAAKE,iCAC3BA,UAAYF,EAAY,IAAKE,kCAC5BA,UAAYF,EAAY,IAAKE"}